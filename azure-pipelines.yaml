# Anchore DevOps Task Dev Pipeline
---
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: srcDirectory
    value: '$(System.DefaultWorkingDirectory)/src'
  - name: publisher
    value: 'FoundItSoftware'
  - name: test_manifest
    value: 'vss-extension.test.json'
  - name: organization
    value: 'jpetersenames'

  - group: TestPublishing
  - group: DeployPublishing
  - name: deploy_manifest
    value: 'vss-extension.deploy.json'

stages:
- stage: Testing
  displayName: Build and Test
  jobs:
  - job: Testing
    displayName: Build and Test
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      workingDirectory: anchore-task
      displayName: 'Install and Build the task'

    - script: |
        export ANCHORE_MANIFEST_ID=$(test_manifest_id)
        export ANCHORE_TASK_ID=$(test_task_id)
        export ANCHORE_TASK_NAME=$(test_task_name)
        envsubst < vss-extension.template.json > $(test_manifest)
        envsubst < anchore-task/task.template.json > anchore-task/task.json
      displayName: 'Configure test task'

    - script: |
        cat $(test_manifest)
        cat anchore-task/task.json

    - script: |
        npm install -g tfx-cli
        tfx extension publish --publisher $(publisher) --manifests $(test_manifest) --token $(test_publish_token) --share-with $(organization)
      displayName: 'Publish test extension'

    - script: |
        docker pull alpine
      displayName: 'Pull image to test'

    - task: AnchoreTesting@0
      inputs:
        image: 'alpine:latest'

    - script: |
        echo 'Passed the testing!'
      displayName: 'Success Message'

- stage: Deploy
  dependsOn: Testing
  displayName: Deploy Anchore Task
  jobs:
  - job: Deploy
    displayName: Deploy Anchore Task
    steps:
    - script: |
        export ANCHORE_MANIFEST_ID=$(deploy_manifest_id)
        export ANCHORE_TASK_ID=$(deploy_task_id)
        export ANCHORE_TASK_NAME=$(deploy_task_name)
        envsubst < vss-extension.template.json > $(deploy_manifest)
        envsubst < anchore-task/task.template.json > anchore-task/task.json
      displayName: 'Configure deploy task'

    - script: |
        cat $(deploy_manifest)
        cat anchore-task/task.json


